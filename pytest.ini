[pytest]
# pytest configuration for Singapore News Scraper

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Add project directories to Python path
pythonpath = . scripts

# Output options
addopts = 
    -v
    --strict-markers
    --tb=short
    --cov=scripts
    --cov=api
    --cov-report=html:tests/coverage/python
    --cov-report=xml:tests/coverage/python/coverage.xml
    --cov-report=term-missing
    --cov-report=json:tests/coverage/python/coverage.json
    --cov-config=.coveragerc
    --junit-xml=tests/reports/pytest-results.xml
    --maxfail=5
    --capture=no
    -p no:warnings
    
# Parallel execution options (comment out for sequential runs)
# -n auto
# --dist loadscope

# Test markers
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    memory: marks tests that check memory usage
    stress: marks stress tests
    security: marks security tests
    integration: marks integration tests
    unit: marks unit tests
    e2e: marks end-to-end tests

# Coverage fail thresholds
# Will fail if coverage drops below these levels
required_plugins = pytest-cov

# Logging
log_cli = false
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)s] %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Timeout for tests (in seconds)
timeout = 300

# Parallel execution
# Uncomment to run tests in parallel
# addopts = -n auto

# Environment variables for testing
env = 
    TESTING=true
    DEBUG_MODE=false